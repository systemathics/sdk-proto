// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// This service provides access to an intraday bars market data service,
// enabling users to retrieve historical bar data for various financial instruments.
// Intraday bars represent aggregated price and volume information over discrete time intervals,
// such as minutes or hours. This service facilitates comprehensive intraday trading analysis
// by offering granularity in market movements, allowing users to derive insights from the
// open, high, low, and close prices within specified time periods.
syntax = "proto3";


import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

import "systemathics/apis/type/shared/v1/identifier.proto";
import "systemathics/apis/type/shared/v1/date_interval.proto";
import "systemathics/apis/type/shared/v1/sampling.proto";

package systemathics.apis.services.intraday.v1;

// Called to request intraday bars data. 
service IntradayBarsService
{
  // Gets intraday historical data: date, open, high, low, close and volume
  rpc IntradayBars(IntradayBarsRequest) returns (IntradayBarsResponse)
  {
	  	 option (google.api.http) = {
			get: "/v1/intraday/bars"
		 };
  }
}

// The required input to request the IntradayBarsService.
message IntradayBarsRequest
{
	// [Mandatory] The instrument identifier: a ticker and exchange
	systemathics.apis.type.shared.v1.Identifier identifier = 1;

	// [Mandatory] The sampling interval
	systemathics.apis.type.shared.v1.Sampling sampling = 2;

	// [Optional] The time constraints used to define the look-back period.
	// If empty, then all the available data is retrieved.
	systemathics.apis.type.shared.v1.DateInterval date_interval = 3;

	// [Optional] The corporate action adjustment (dividends and splits).
	// By default the value is set to false
	bool adjustment = 4;
}

// The intraday bars response contains an array of intraday bars.
message IntradayBarsResponse
{
	// The intraday bars: an array of IntradayBar objects
	repeated IntradayBar data = 1;
}

// Contains the intraday bar's data: date, open, high, low, close, volume, count, vwap and score.
message IntradayBar 
{
	// Time stamp of the intraday bar : open time of the sampling interval
	google.protobuf.Timestamp time_stamp = 1;
	
	// Open price of the sampling period
	double open = 2;
	
	// Highest price of the sampling period
	double high = 3;
	
	// Lowest price of the sampling period
	double low = 4;
	
	// Close price of the sampling period
	double close = 5;
	
	// Total traded volume of the sampling period
	double volume = 6;

	// Tick count of the sampling period
	int32 count = 7;

	// Volume weighted average price of the sampling period
	double vwap = 8;

	// The data quality scoring : from 0 (bad) to 100 (good)
	double score = 9;
}
 
