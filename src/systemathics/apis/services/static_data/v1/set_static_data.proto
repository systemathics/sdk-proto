// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Reference data encompasses a wide range of specification data about:
// <br>- financial instrument such as asset class, symbol, maturity, etc.
// <br>- counterparties such as issuer information.
// <br>- pricing such as open, high low and close prices.
// <br>- The challenge with reference data is that it tends to be sourced from multiple sources: internal, counterparties and providers.
// <br>- Reference data dedicated service is a result of various data sources and fields sourcing, validation, cross-checking and normalization.
syntax = "proto3";


import "google/api/annotations.proto";
import "google/type/date.proto";
import "google/protobuf/empty.proto";

import "systemathics/apis/services/static_data/v1/static_data.proto";

package systemathics.apis.services.static_data.v1;

// Called to set static data.
service SetStaticDataService
{
  // Creates Option Static data from OTC Streaming
  rpc CreateStaticDataOtcStreaming(StaticDataOtcStreamingRequest) returns (google.protobuf.Empty)
  {
          option (google.api.http) = {
            get: "/v1/staticdata/otc_streaming"
        };
  }
}


// Static data cration message for OTC Streaming data
message StaticDataOtcStreamingRequest
{
    // [Mandatory] Bloomberg Ticker 
    string ticker = 1;

    // [Mandatory] Provider, ussully the bank contributing
    string provider = 2;

    // [Mandatory] Strike of the option
    double strike = 3;

    // [Mandatory] Swaption type (Payer or Receiver)
    SwaptionType swaption_type = 4;

    // [Mandatory] Expiry date or maturity date of the option.
    google.type.Date expiry = 5;

    // [Mandatory] Bloomberg Ticker of the underlying
    string underlying_ticker = 6;

    // [Mandatory] Currency of the option
    string currency = 7;

    // [Optional] Markit Id of the option
    string markit_id = 8;

    // [Optional] FIGI code of the option
    string figi = 9;

    // [Optional] Trading calendar the option
    string calendar = 10;
}
