// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// This service provides access to an daily marketdata market data service,
// enabling users to retrieve historical market data for various financial instruments.
// MarketData represents a comprehensive aggregation of all pertinent market information, 
// encompassing various data points such as bar data, best limit data, Greeks, and more.
syntax = "proto3";


import "google/api/annotations.proto";
import "google/type/date.proto";

import "systemathics/apis/type/shared/v1/identifier.proto";
import "systemathics/apis/type/shared/v1/date_interval.proto";

package systemathics.apis.services.daily.v1;

// Called to request daily MarketData data. 
service DailyMarketDataService
{
  // Gets daily historical marketdata
  rpc DailyMarketData(DailyMarketDataRequest) returns (DailyMarketDataResponse)
  {
	  option (google.api.http) = {
			get: "/v1/daily/marketdata"
	  };
  }
}

// The required input to request the DailyMarketDataService
message DailyMarketDataRequest
{
	// [Mandatory] The instrument identifier: a bloomberg ticker and an asset type 
	systemathics.apis.type.shared.v1.Identifier identifier = 1;

	// [Optional] The date interval used to define the look-back period.
	// If empty, then all the available data is retrieved.
	systemathics.apis.type.shared.v1.DateInterval date_interval = 2;
}

// Represents a daily marketdata response.
message DailyMarketDataResponse
{
	// The daily marketdata : an array of DailyMarketData objects
	repeated DailyMarketData data = 1;
}

// Contains the daily marketdatas information.
message DailyMarketData 
{
	// Date of the marketdata
	google.type.Date date = 1;
	
	// Open price of the sampling period
	double open = 2;
	
	// Highest price of the sampling period
	double high = 3;
	
	// Lowest price of the sampling period
	double low = 4;
	
	// Close price of the sampling period
	double close = 5;
	
	// Total traded volume of the sampling period
	double volume = 6;

	// The best bid price of the sampling period
	double bid_price = 7;
	
	// The best bid size of the sampling period
	double bid_size = 8;
	
	// The best ask price of the sampling period
	double ask_price = 9;
	
	// The best ask size of the sampling period
	double ask_size = 10;

	// Measures the sensitivity of an option's theoretical value to a change in the price of the underlying asset.
	//<br>It indicates the expected change in the option price for a one-point change in the underlying asset. 
	//<br>For example, if an option has a delta of 0.7, it suggests that the option's price will increase by $0.70 for every $1 increase in the underlying asset.
	double delta = 11;
	
	// Measeure sthe rate of change in the delta for each one-point increase in the underlying asset.
	//<br>It measures how much the delta of an option will change as the price of the underlying asset changes. 
	//<br>Gamma is particularly important for assessing how delta might change as the underlying asset's price fluctuates.
	double gamma = 12;

	// A measure of the time decay on an option, the amount that an option willl lose each day due to the passage of time.
	//<br>It represents the change in the option price for a one-day decrease in the time to expiration. 
	//<br>Theta is often referred to as time decay. As the expiration date approaches, the time value of an option tends to decrease, and theta quantifies that decay.
	double theta = 13;
	
	// Measures the sensitivity of the price of an option to changes in implied volatility. 
	//<br>Implied volatility reflects the market's expectations for future price fluctuations. 
	//<br>Vega indicates how much the option price is expected to change for a one-percentage-point change in implied volatility.
	double vega = 14;

	// The rate at which the price of a derivative changes relative to a change in the risk-free rate of interest. 
	//<br>It represents the change in the option price for a one-percentage-point change in interest rates. 
	//<br>Rho is more relevant for options with longer time to expiration.
	double rho = 15;

	// ImpliedVolatility value of the sampling period
	double implied_volatility = 16;

	// OpenInterest value of the sampling period
	double open_interest = 17;

	// Underlying price of the sampling period
	double underlying = 18;

	// The implied volatility for a 30-day call option
	double implied_volatility_30_call = 19;

	// The implied volatility for a 30-day put option
	double implied_volatility_30_put = 20;

	// The mean implied volatility for a 30-day period.
	double implied_volatility_30_mean = 21;

	// The implied volatility for a 60-day call option
	double implied_volatility_60_call = 22;

	// The implied volatility for a 60-day put option
	double implied_volatility_60_put = 23;

	// The mean implied volatility for a 60-day period.
	double implied_volatility_60_mean = 24;

	// The implied volatility for a 90-day call option
	double implied_volatility_90_call = 25;

	// The implied volatility for a 90-day put option
	double implied_volatility_90_put = 26;

	// The mean implied volatility for a 90-day period.
	double implied_volatility_90_mean = 27;

	// The implied volatility for a 120-day call option
	double implied_volatility_120_call = 28;

	// The implied volatility for a 120-day put option
	double implied_volatility_120_put = 29;

	// The mean implied volatility for a 120-day period.
	double implied_volatility_120_mean = 30;

	// The implied volatility for a 150-day call option
	double implied_volatility_150_call = 31;

	// The implied volatility for a 150-day put option
	double implied_volatility_150_put = 32;

	// The mean implied volatility for a 150-day period.
	double implied_volatility_150_mean = 33;

	// The implied volatility for a 180-day call option
	double implied_volatility_180_call = 34;

	// The implied volatility for a 180-day put option
	double implied_volatility_180_put = 35;

	// The mean implied volatility for a 180-day period.
	double implied_volatility_180_mean = 36;

	// The implied volatility for a 360-day call option
	double implied_volatility_360_call = 37;

	// The implied volatility for a 360-day put option
	double implied_volatility_360_put = 38;

	// The mean implied volatility for a 360-day period.
	double implied_volatility_360_mean = 39;

	// The volume of call options traded for the current day.
	double call_volume = 40;

	// The volume of put options traded for the current day.
	double put_volume = 41;

	// The total volume of options traded for the current day.
	double total_volume = 42;

	// The call Open Interest (number of open call contracts) at the beginning of the trading session.
	double call_open_interest = 43;

	// The put Open Interest (number of open put contracts) at the beginning of the trading session.
	double put_open_interest = 44;

	// The Open Interest (number of open put and call contracts) at the beginning of the trading session.
	double total_open_interest = 45;

	// The data quality scoring : from 0 (bad) to 100 (good)
	double score = 46;

	// The implied volatility bid.
	double implied_volatility_bid = 47;

	// The implied volatility ask.
	double implied_volatility_ask = 48;

	// The implied volatility mean.
	double implied_volatility_mean = 49;

	// The option symbol
	string option_symbol = 50;

	// The total number of outstanding options contracts that have not been exercised or expired yet, as of the next trading day.
	double t1_open_interest = 51;
}
 
