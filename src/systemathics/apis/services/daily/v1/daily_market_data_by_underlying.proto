// Copyright (c) 2021 Systemathics
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// This service provides access to an daily marketdata market data service,
// enabling users to retrieve historical market data for various financial instruments.
// MarketData represents a comprehensive aggregation of all pertinent market information, 
// encompassing various data points such as bar data, best limit data, Greeks, and more.
syntax = "proto3";


import "google/api/annotations.proto";
import "google/type/date.proto";

import "systemathics/apis/type/shared/v1/identifier.proto";
import "systemathics/apis/type/shared/v1/option_type.proto";

package systemathics.apis.services.daily.v1;

// Called to request daily MarketData data. 
service DailyMarketDataByUnderlyingService
{
  rpc DailyMarketDataByUnderlying(DailyMarketDataByUnderlyingRequest) returns (DailyMarketDataByUnderlyingResponse)
  {
	  option (google.api.http) = {
			get: "/v1/daily/marketdata_by_underlying"
	  };
  }
}


message DailyMarketDataByUnderlyingRequest
{
	// [Mandatory] The underlying instrument identifier: a bloomberg ticker and an asset type 
	systemathics.apis.type.shared.v1.Identifier underlying_identifier = 1;

	// [Mandatory] The date used.
	google.type.Date date = 2;
}

// Represents a daily marketdata by underlying response.
message DailyMarketDataByUnderlyingResponse
{
	// The daily marketdata : an array of DailyMarketDataByUnderlying objects
	repeated DailyMarketDataByUnderlying data = 1;
}


// Contains the daily marketdatas information by underlying.
message DailyMarketDataByUnderlying
{
	// Date of the marketdata
	google.type.Date date = 1;

	// Underlying symbol
	string underlying_symbol = 2;
	
	// Underlying price
	double underlying_price = 3;
	
	// Option symbol (OPRA)
	string option_symbol = 4;
	
	// Option type
	systemathics.apis.type.shared.v1.OptionType option_type = 5;
	
	// Option strike
	double option_strike = 6;
	
	// Option expiration date.
	google.type.Date option_expiration_date = 7;

	// The last price.
	double last_price = 8;

	// The bid price.
	double bid_price = 9;
	
	// The ask price.
	double ask_price = 10;
	
	// The volume of options traded.
	double volume = 11;

	// Open interest value.
	double open_interest = 12;

	// The total number of outstanding options contracts that have not been exercised or expired yet, as of the next trading day.
	double t1_open_interest = 13;

	// Measures the sensitivity of an option's theoretical value to a change in the price of the underlying asset.
	//<br>It indicates the expected change in the option price for a one-point change in the underlying asset. 
	//<br>For example, if an option has a delta of 0.7, it suggests that the option's price will increase by $0.70 for every $1 increase in the underlying asset.
	double delta = 14;
	
	// Measeure sthe rate of change in the delta for each one-point increase in the underlying asset.
	//<br>It measures how much the delta of an option will change as the price of the underlying asset changes. 
	//<br>Gamma is particularly important for assessing how delta might change as the underlying asset's price fluctuates.
	double gamma = 15;

	// A measure of the time decay on an option, the amount that an option willl lose each day due to the passage of time.
	//<br>It represents the change in the option price for a one-day decrease in the time to expiration. 
	//<br>Theta is often referred to as time decay. As the expiration date approaches, the time value of an option tends to decrease, and theta quantifies that decay.
	double theta = 16;
	
	// Measures the sensitivity of the price of an option to changes in implied volatility. 
	//<br>Implied volatility reflects the market's expectations for future price fluctuations. 
	//<br>Vega indicates how much the option price is expected to change for a one-percentage-point change in implied volatility.
	double vega = 17;

	// The implied volatility bid.
	double implied_volatility_bid = 18;

	// The implied volatility ask.
	double implied_volatility_ask = 19;

	// The implied volatility mean.
	double implied_volatility_mean = 20;
}
